<?xml version="1.0" encoding="ISO-8859-1"?>
<class id="Mobius.RewardModels.pvs.PVInterface">
	<int id="ClassVersion">1</int>
	<class id="Mobius.BaseClasses.BaseInterfaceClass">
		<int id="ClassVersion">3</int>
		<string id="ModelName">Q20</string>
		<class id="Mobius.RewardModels.pvs.PVInfo">
			<int id="ClassVersion">3</int>
			<class id="Mobius.BaseClasses.BaseInfoClass">
				<int id="ClassVersion">2</int>
			</class>
			<string id="OutputDirectory">Reward/Q20/</string>
			<string id="PVModelFileName">Q20PVModel</string>
			<string id="PVNodeFileName">Q20PVNodes</string>
			<string id="PVArchiveName">Q20PV</string>
			<vector id="IncludePath">
				<string id="0">Atomic/Q20/Q20SAN.h</string>
			</vector>
			<vector id="HeaderFileList">
				<string id="0">Reward/Q20/Q20PVNodes.h</string>
				<string id="1">Reward/Q20/Q20PVModel.h</string>
			</vector>
			<vector id="CodeFileList">
				<string id="0">Reward/Q20/Q20PVNodes.cpp</string>
				<string id="1">Reward/Q20/Q20PVModel.cpp</string>
			</vector>
			<int id="NumVars">4</int>
			<class id="Mobius.RewardModels.pvs.VariableInfo">
				<int id="ClassVersion">7</int>
				<string id="Name">throughput</string>
				<vector id="AffectingModelList">
					<string id="0">Q20</string>
				</vector>
				<vector id="AffectingActionsList">
				</vector>
				<vector id="ImpulseFunctionsList">
				</vector>
				<string id="RewardFunction">
					if ( \n\t(Q20-&gt;PDone3-&gt;Mark() == (cnt3-1)) &amp;&amp; 
					\n\t(Q20-&gt;PRunning3-&gt;Mark() &gt; 0)\n)\n\treturn (1.0 
					/ avg3)*(double)(Q20-&gt;PRunning3-&gt;Mark());\nelse\n\tret
					urn 0.0;
				</string>
				<int id="Type">3</int>
				<int id="TimeSeriesType">1</int>
				<double id="TimeSeriesFirst">0.0</double>
				<double id="TimeSeriesLast">0.0</double>
				<double id="TimeSeriesStep">0.0</double>
				<double id="TimeSeriesInterval">0.0</double>
				<int id="NumTimePoints">1</int>
				<vector id="StartTimes">
					<string id="0">0.0</string>
				</vector>
				<vector id="StopTimes">
					<string id="0">0.0</string>
				</vector>
				<double id="InitialTransient">0.0</double>
				<double id="BatchSize">1.0</double>
				<null id="InitialTransientVar"></null>
				<null id="BatchSizeVar"></null>
				<boolean id="EstimateMean">true</boolean>
				<boolean id="EstimateVariance">false</boolean>
				<boolean id="EstimateInterval">false</boolean>
				<boolean id="IncludeLowerBoundOnIntervalEstimate">true</boolean>
				<boolean id="IncludeUpperBoundOnIntervalEstimate">true</boolean>
				<double id="LowerBoundOnIntervalEstimate">0.0</double>
				<double id="UpperBoundOnIntervalEstimate">1.0</double>
				<boolean id="EstimateDistribution">false</boolean>
				<boolean id="EstimateOutOfRangeProbabilities">true</boolean>
				<double id="LowerBoundOnDistributionEstimate">0.0</double>
				<double id="UpperBoundOnDistributionEstimate">1.0</double>
				<double id="StepSizeOnDistributionEstimate">0.1</double>
				<int id="ConfidenceLevel">2</int>
				<double id="ConfidenceInterval">0.1</double>
				<boolean id="ConfidenceIntervalIsRelative">true</boolean>
				<boolean id="RewardIsOverAllAvailableModels">true</boolean>
				<vector id="ImpulseIsOverAllAvailableModels">
				</vector>
			</class>
			<class id="Mobius.RewardModels.pvs.VariableInfo">
				<int id="ClassVersion">7</int>
				<string id="Name">rateReturn</string>
				<vector id="AffectingModelList">
					<string id="0">Q20</string>
				</vector>
				<vector id="AffectingActionsList">
				</vector>
				<vector id="ImpulseFunctionsList">
				</vector>
				<string id="RewardFunction">
					return (double)(Q20-&gt;PRunning1-&gt;Mark())*(1.0/avg1) \n\
					t + (double)(Q20-&gt;PRunning2-&gt;Mark())*(1.0/avg2)\n\t + 
					(double)(Q20-&gt;PRunning3-&gt;Mark())*(1.0/avg3);
				</string>
				<int id="Type">3</int>
				<int id="TimeSeriesType">1</int>
				<double id="TimeSeriesFirst">0.0</double>
				<double id="TimeSeriesLast">0.0</double>
				<double id="TimeSeriesStep">0.0</double>
				<double id="TimeSeriesInterval">0.0</double>
				<int id="NumTimePoints">1</int>
				<vector id="StartTimes">
					<string id="0">0.0</string>
				</vector>
				<vector id="StopTimes">
					<string id="0">0.0</string>
				</vector>
				<double id="InitialTransient">0.0</double>
				<double id="BatchSize">1.0</double>
				<null id="InitialTransientVar"></null>
				<null id="BatchSizeVar"></null>
				<boolean id="EstimateMean">true</boolean>
				<boolean id="EstimateVariance">false</boolean>
				<boolean id="EstimateInterval">false</boolean>
				<boolean id="IncludeLowerBoundOnIntervalEstimate">true</boolean>
				<boolean id="IncludeUpperBoundOnIntervalEstimate">true</boolean>
				<double id="LowerBoundOnIntervalEstimate">0.0</double>
				<double id="UpperBoundOnIntervalEstimate">1.0</double>
				<boolean id="EstimateDistribution">false</boolean>
				<boolean id="EstimateOutOfRangeProbabilities">true</boolean>
				<double id="LowerBoundOnDistributionEstimate">0.0</double>
				<double id="UpperBoundOnDistributionEstimate">1.0</double>
				<double id="StepSizeOnDistributionEstimate">0.1</double>
				<int id="ConfidenceLevel">2</int>
				<double id="ConfidenceInterval">0.1</double>
				<boolean id="ConfidenceIntervalIsRelative">true</boolean>
				<boolean id="RewardIsOverAllAvailableModels">true</boolean>
				<vector id="ImpulseIsOverAllAvailableModels">
				</vector>
			</class>
			<class id="Mobius.RewardModels.pvs.VariableInfo">
				<int id="ClassVersion">7</int>
				<string id="Name">pInactive</string>
				<vector id="AffectingModelList">
					<string id="0">Q20</string>
				</vector>
				<vector id="AffectingActionsList">
				</vector>
				<vector id="ImpulseFunctionsList">
				</vector>
				<string id="RewardFunction">
					if (\n\tQ20-&gt;PRunning1-&gt;Mark()+Q20-&gt;PDone1-&gt;Mark
					() == cnt1 ||\n\tQ20-&gt;PRunning2-&gt;Mark()+Q20-&gt;PDone2
					-&gt;Mark() == cnt2 ||\n\tQ20-&gt;PRunning3-&gt;Mark()+Q20-&
					gt;PDone3-&gt;Mark() == cnt3 ||\n\tQ20-&gt;PStart-&gt;Mark()
					 &gt;= cntUser\n) \n\treturn 1; \nelse \n\treturn 0;
				</string>
				<int id="Type">3</int>
				<int id="TimeSeriesType">1</int>
				<double id="TimeSeriesFirst">0.0</double>
				<double id="TimeSeriesLast">0.0</double>
				<double id="TimeSeriesStep">0.0</double>
				<double id="TimeSeriesInterval">0.0</double>
				<int id="NumTimePoints">1</int>
				<vector id="StartTimes">
					<string id="0">0.0</string>
				</vector>
				<vector id="StopTimes">
					<string id="0">0.0</string>
				</vector>
				<double id="InitialTransient">0.0</double>
				<double id="BatchSize">1.0</double>
				<null id="InitialTransientVar"></null>
				<null id="BatchSizeVar"></null>
				<boolean id="EstimateMean">true</boolean>
				<boolean id="EstimateVariance">false</boolean>
				<boolean id="EstimateInterval">false</boolean>
				<boolean id="IncludeLowerBoundOnIntervalEstimate">true</boolean>
				<boolean id="IncludeUpperBoundOnIntervalEstimate">true</boolean>
				<double id="LowerBoundOnIntervalEstimate">0.0</double>
				<double id="UpperBoundOnIntervalEstimate">1.0</double>
				<boolean id="EstimateDistribution">false</boolean>
				<boolean id="EstimateOutOfRangeProbabilities">true</boolean>
				<double id="LowerBoundOnDistributionEstimate">0.0</double>
				<double id="UpperBoundOnDistributionEstimate">1.0</double>
				<double id="StepSizeOnDistributionEstimate">0.1</double>
				<int id="ConfidenceLevel">2</int>
				<double id="ConfidenceInterval">0.1</double>
				<boolean id="ConfidenceIntervalIsRelative">true</boolean>
				<boolean id="RewardIsOverAllAvailableModels">true</boolean>
				<vector id="ImpulseIsOverAllAvailableModels">
				</vector>
			</class>
			<class id="Mobius.RewardModels.pvs.VariableInfo">
				<int id="ClassVersion">7</int>
				<string id="Name">rateActive</string>
				<vector id="AffectingModelList">
					<string id="0">Q20</string>
				</vector>
				<vector id="AffectingActionsList">
				</vector>
				<vector id="ImpulseFunctionsList">
				</vector>
				<string id="RewardFunction">
					if (Q20-&gt;PDone1-&gt;Mark() == cnt1 - 1)\n\treturn 0.1/avg
					1;\nif (Q20-&gt;PDone2-&gt;Mark() == cnt2 - 1)\n\treturn 0.1
					/avg2;\nif (Q20-&gt;PStart-&gt;Mark() &gt; 0)\n\treturn rate
					Think*(double)(Q20-&gt;PStart-&gt;Mark());\nelse\n\treturn 0
					;
				</string>
				<int id="Type">3</int>
				<int id="TimeSeriesType">1</int>
				<double id="TimeSeriesFirst">0.0</double>
				<double id="TimeSeriesLast">0.0</double>
				<double id="TimeSeriesStep">0.0</double>
				<double id="TimeSeriesInterval">0.0</double>
				<int id="NumTimePoints">1</int>
				<vector id="StartTimes">
					<string id="0">0.0</string>
				</vector>
				<vector id="StopTimes">
					<string id="0">0.0</string>
				</vector>
				<double id="InitialTransient">0.0</double>
				<double id="BatchSize">1.0</double>
				<null id="InitialTransientVar"></null>
				<null id="BatchSizeVar"></null>
				<boolean id="EstimateMean">true</boolean>
				<boolean id="EstimateVariance">false</boolean>
				<boolean id="EstimateInterval">false</boolean>
				<boolean id="IncludeLowerBoundOnIntervalEstimate">true</boolean>
				<boolean id="IncludeUpperBoundOnIntervalEstimate">true</boolean>
				<double id="LowerBoundOnIntervalEstimate">0.0</double>
				<double id="UpperBoundOnIntervalEstimate">1.0</double>
				<boolean id="EstimateDistribution">false</boolean>
				<boolean id="EstimateOutOfRangeProbabilities">true</boolean>
				<double id="LowerBoundOnDistributionEstimate">0.0</double>
				<double id="UpperBoundOnDistributionEstimate">1.0</double>
				<double id="StepSizeOnDistributionEstimate">0.1</double>
				<int id="ConfidenceLevel">2</int>
				<double id="ConfidenceInterval">0.1</double>
				<boolean id="ConfidenceIntervalIsRelative">true</boolean>
				<boolean id="RewardIsOverAllAvailableModels">true</boolean>
				<vector id="ImpulseIsOverAllAvailableModels">
				</vector>
			</class>
			<string id="TopModelName">Q20</string>
			<string id="ModelName">Q20</string>
		</class>
		<class id="PVEditor">
			<int id="ClassVersion">2</int>
			<string id="TheInterfaceName">Q20</string>
			<boolean id="SkipAcceptPopup">true</boolean>
			<class id="Mobius.BaseClasses.BaseEditorClass">
				<int id="ClassVersion">3</int>
				<boolean id="HasPanel">false</boolean>
				<vector id="LocalGlobalNamesList">
				</vector>
				<vector id="LocalGlobalTypesList">
				</vector>
				<boolean id="DisplayToolTips">true</boolean>
			</class>
		</class>
		<boolean id="Valid">true</boolean>
	</class>
</class>
